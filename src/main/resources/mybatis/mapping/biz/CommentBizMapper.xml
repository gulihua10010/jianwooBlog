<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jianwoo.blog.dao.biz.mapper.CommentBizMapper">
    <resultMap id="BaseResultMap" type="cn.jianwoo.blog.entity.Comment">
        <id column="OID" jdbcType="BIGINT" property="oid"/>
        <result column="ARTICLE_OID" jdbcType="BIGINT" property="articleOid"/>
        <result column="USER_NAME" jdbcType="VARCHAR" property="userName"/>
        <result column="CLIENT_IP" jdbcType="VARCHAR" property="clientIp"/>
        <result column="USER_AREA" jdbcType="VARCHAR" property="userArea"/>
        <result column="COMMENT_TIME" jdbcType="TIMESTAMP" property="commentTime"/>
        <result column="PARENT_OID" jdbcType="BIGINT" property="parentOid"/>
        <result column="PRAISE_COUNT" jdbcType="BIGINT" property="praiseCount"/>
        <result column="CONTACT_QQ" jdbcType="VARCHAR" property="contactQq"/>
        <result column="CONTACT_WECHAT" jdbcType="VARCHAR" property="contactWechat"/>
        <result column="CONTACT_WEIBO" jdbcType="VARCHAR" property="contactWeibo"/>
        <result column="CONTACT_TEL" jdbcType="VARCHAR" property="contactTel"/>
        <result column="HEAD_IMG_SRC" jdbcType="VARCHAR" property="headImgSrc"/>
        <result column="ART_DEL_STAUTS" jdbcType="VARCHAR" property="artDelStauts"/>
        <result column="READ_STATUS" jdbcType="VARCHAR" property="readStatus"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap id="ResultMapWithExt" extends="BaseResultMap" type="cn.jianwoo.blog.entity.extension.CommentExt">
        <result column="TITLE" property="title" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="REPLY_TO" property="parentUserName" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>
    <sql id="Base_Column_List">
        OID, ARTICLE_OID, USER_NAME, CLIENT_IP, USER_AREA, COMMENT_TIME, PARENT_OID, PRAISE_COUNT,
    CONTACT_QQ, CONTACT_WECHAT, CONTACT_WEIBO, CONTACT_TEL, HEAD_IMG_SRC, ART_DEL_STAUTS,
    READ_STATUS, CREATE_TIME, UPDATE_TIME
    </sql>
    <sql id="Blob_Column_List">
        CONTENT
    </sql>
    <sql id="Ext_Column_List">
        C.OID, C.ARTICLE_OID, C.USER_NAME, C.CLIENT_IP, C.USER_AREA, C.COMMENT_TIME,
        C.PARENT_OID, C.PRAISE_COUNT, C.CONTACT_QQ, C.CONTACT_WECHAT, C.CONTACT_WEIBO,
        C.CONTACT_TEL, C.HEAD_IMG_SRC, C.ART_DEL_STAUTS, C.READ_STATUS, C.CREATE_TIME, C.UPDATE_TIME,
        C.CONTENT
    </sql>
    <select id="selectLastComment" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from comments
        ORDER BY OID DESC LIMIT 1;
    </select>

    <select id="selectRecentComments" parameterType="java.lang.Integer" resultMap="ResultMapWithExt">
        SELECT
        <include refid="Ext_Column_List"/>
        ,
        A.TITLE
        FROM
        COMMENTS C
        INNER JOIN ARTICLE A ON A.OID = C.ARTICLE_OID
        ORDER BY
        C.UPDATE_TIME DESC
        LIMIT #{limit,jdbcType=INTEGER}
    </select>

    <select id="countWithUnreadComm" resultType="int">
        SELECT COUNT(1)
        FROM
            COMMENTS
        WHERE
              ART_DEL_STAUTS != -1
          AND IS_READ = 0
    </select>

    <select id="countWithCommentByArt" resultType="int" parameterType="java.lang.Long">
        select count(1)
        from
            comments
        where
            ARTICLE_OID = #{articleOid,jdbcType=BIGINT}
    </select>

    <select id="countAllComments" resultType="int">
        select count(1)
        from
            comments
    </select>

    <select id="selectCommentsExtByArticleOid" parameterType="java.lang.Long" resultMap="ResultMapWithExt">
        SELECT
        <include refid="Ext_Column_List"/>
        ,
        A.TITLE
        FROM
        COMMENTS C
        INNER JOIN ARTICLE A ON A.OID = C.ARTICLE_OID
        WHERE
        C.ARTICLE_OID = #{articleOid,jdbcType=BIGINT}
        ORDER BY
        C.UPDATE_TIME DESC
    </select>

    <select id="selectAllCommentsExt" resultMap="ResultMapWithExt"
            parameterType="cn.jianwoo.blog.entity.query.CommentParam">
        SELECT
        C.OID,
        C.USER_NAME,
        C.COMMENT_TIME,
        C.CONTENT,
        C.ARTICLE_OID,
        A.TITLE,
        IF (
        P. USER_NAME IS NULL,
        '文章',
        P. USER_NAME
        ) AS REPLY_TO
        FROM
        COMMENTS C
        LEFT JOIN COMMENTS P ON C.PARENT_OID = P.OID
        INNER JOIN ARTICLE A ON A.OID = C.ARTICLE_OID
        <where>
            <if test="title != null">
                A.TITLE LIKE CONCAT('%',#{title,jdbcType=VARCHAR},'%')
            </if>
            <if test="readStatus != null">
                C.READ_STATUS = #{readStatus}
            </if>
        </where>
        ORDER BY
        A.TITLE ASC,
        C.UPDATE_TIME DESC
    </select>
    <select id="selectCommentExtByOid" resultMap="ResultMapWithExt" parameterType="java.lang.Long">
        SELECT
        <include refid="Ext_Column_List"/>
        ,
        A.TITLE
        FROM COMMENTS C
        INNER JOIN ARTICLE A ON A.OID = C.ARTICLE_OID
        WHERE C.OID = #{oid,jdbcType=BIGINT}
    </select>

    <update id="updateCommentPraiseCnt">
        UPDATE COMMENTS
        SET
            PRAISE_COUNT = PRAISE_COUNT + 1,
            UPDATE_TIME = NOW()
        WHERE
            OID = #{oid,jdbcType=BIGINT};

    </update>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jianwoo.blog.dao.base.mapper.LoginLogMapper">
  <resultMap id="BaseResultMap" type="cn.jianwoo.blog.entity.LoginLog">
    <id column="OID" jdbcType="BIGINT" property="oid" />
    <result column="LOGIN_ID" jdbcType="VARCHAR" property="loginId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="EVENT_TYPE" jdbcType="VARCHAR" property="eventType" />
    <result column="TRIGGER_TIME" jdbcType="TIMESTAMP" property="triggerTime" />
    <result column="TRIGGER_DESC" jdbcType="VARCHAR" property="triggerDesc" />
    <result column="TRIGGER_IP" jdbcType="VARCHAR" property="triggerIp" />
    <result column="TRIGGER_REGION" jdbcType="VARCHAR" property="triggerRegion" />
    <result column="TRIGGER_DEVICE" jdbcType="VARCHAR" property="triggerDevice" />
    <result column="PROCESS_STATUS" jdbcType="VARCHAR" property="processStatus" />
    <result column="FAILED_REASON" jdbcType="VARCHAR" property="failedReason" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OID, LOGIN_ID, USER_NAME, EVENT_TYPE, TRIGGER_TIME, TRIGGER_DESC, TRIGGER_IP, TRIGGER_REGION, 
    TRIGGER_DEVICE, PROCESS_STATUS, FAILED_REASON, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="cn.jianwoo.blog.entity.example.LoginLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LOGIN_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MySQLDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LOGIN_LOG
    where OID = #{oid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from LOGIN_LOG
    where OID = #{oid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jianwoo.blog.entity.example.LoginLogExample">
    delete from LOGIN_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="OID" keyProperty="oid" parameterType="cn.jianwoo.blog.entity.LoginLog" useGeneratedKeys="true">
    insert into LOGIN_LOG (LOGIN_ID, USER_NAME, EVENT_TYPE, 
      TRIGGER_TIME, TRIGGER_DESC, TRIGGER_IP, 
      TRIGGER_REGION, TRIGGER_DEVICE, PROCESS_STATUS, 
      FAILED_REASON, CREATE_TIME, UPDATE_TIME
      )
    values (#{loginId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{eventType,jdbcType=VARCHAR}, 
      #{triggerTime,jdbcType=TIMESTAMP}, #{triggerDesc,jdbcType=VARCHAR}, #{triggerIp,jdbcType=VARCHAR}, 
      #{triggerRegion,jdbcType=VARCHAR}, #{triggerDevice,jdbcType=VARCHAR}, #{processStatus,jdbcType=VARCHAR}, 
      #{failedReason,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="OID" keyProperty="oid" parameterType="cn.jianwoo.blog.entity.LoginLog" useGeneratedKeys="true">
    insert into LOGIN_LOG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        LOGIN_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="eventType != null">
        EVENT_TYPE,
      </if>
      <if test="triggerTime != null">
        TRIGGER_TIME,
      </if>
      <if test="triggerDesc != null">
        TRIGGER_DESC,
      </if>
      <if test="triggerIp != null">
        TRIGGER_IP,
      </if>
      <if test="triggerRegion != null">
        TRIGGER_REGION,
      </if>
      <if test="triggerDevice != null">
        TRIGGER_DEVICE,
      </if>
      <if test="processStatus != null">
        PROCESS_STATUS,
      </if>
      <if test="failedReason != null">
        FAILED_REASON,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="triggerTime != null">
        #{triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="triggerDesc != null">
        #{triggerDesc,jdbcType=VARCHAR},
      </if>
      <if test="triggerIp != null">
        #{triggerIp,jdbcType=VARCHAR},
      </if>
      <if test="triggerRegion != null">
        #{triggerRegion,jdbcType=VARCHAR},
      </if>
      <if test="triggerDevice != null">
        #{triggerDevice,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="failedReason != null">
        #{failedReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jianwoo.blog.entity.example.LoginLogExample" resultType="java.lang.Long">
    select count(*) from LOGIN_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update LOGIN_LOG
    <set>
      <if test="record.oid != null">
        OID = #{record.oid,jdbcType=BIGINT},
      </if>
      <if test="record.loginId != null">
        LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventType != null">
        EVENT_TYPE = #{record.eventType,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerTime != null">
        TRIGGER_TIME = #{record.triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.triggerDesc != null">
        TRIGGER_DESC = #{record.triggerDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerIp != null">
        TRIGGER_IP = #{record.triggerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerRegion != null">
        TRIGGER_REGION = #{record.triggerRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerDevice != null">
        TRIGGER_DEVICE = #{record.triggerDevice,jdbcType=VARCHAR},
      </if>
      <if test="record.processStatus != null">
        PROCESS_STATUS = #{record.processStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.failedReason != null">
        FAILED_REASON = #{record.failedReason,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update LOGIN_LOG
    set OID = #{record.oid,jdbcType=BIGINT},
      LOGIN_ID = #{record.loginId,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      EVENT_TYPE = #{record.eventType,jdbcType=VARCHAR},
      TRIGGER_TIME = #{record.triggerTime,jdbcType=TIMESTAMP},
      TRIGGER_DESC = #{record.triggerDesc,jdbcType=VARCHAR},
      TRIGGER_IP = #{record.triggerIp,jdbcType=VARCHAR},
      TRIGGER_REGION = #{record.triggerRegion,jdbcType=VARCHAR},
      TRIGGER_DEVICE = #{record.triggerDevice,jdbcType=VARCHAR},
      PROCESS_STATUS = #{record.processStatus,jdbcType=VARCHAR},
      FAILED_REASON = #{record.failedReason,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jianwoo.blog.entity.LoginLog">
    update LOGIN_LOG
    <set>
      <if test="loginId != null">
        LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        EVENT_TYPE = #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="triggerTime != null">
        TRIGGER_TIME = #{triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="triggerDesc != null">
        TRIGGER_DESC = #{triggerDesc,jdbcType=VARCHAR},
      </if>
      <if test="triggerIp != null">
        TRIGGER_IP = #{triggerIp,jdbcType=VARCHAR},
      </if>
      <if test="triggerRegion != null">
        TRIGGER_REGION = #{triggerRegion,jdbcType=VARCHAR},
      </if>
      <if test="triggerDevice != null">
        TRIGGER_DEVICE = #{triggerDevice,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        PROCESS_STATUS = #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="failedReason != null">
        FAILED_REASON = #{failedReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OID = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jianwoo.blog.entity.LoginLog">
    update LOGIN_LOG
    set LOGIN_ID = #{loginId,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      EVENT_TYPE = #{eventType,jdbcType=VARCHAR},
      TRIGGER_TIME = #{triggerTime,jdbcType=TIMESTAMP},
      TRIGGER_DESC = #{triggerDesc,jdbcType=VARCHAR},
      TRIGGER_IP = #{triggerIp,jdbcType=VARCHAR},
      TRIGGER_REGION = #{triggerRegion,jdbcType=VARCHAR},
      TRIGGER_DEVICE = #{triggerDevice,jdbcType=VARCHAR},
      PROCESS_STATUS = #{processStatus,jdbcType=VARCHAR},
      FAILED_REASON = #{failedReason,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where OID = #{oid,jdbcType=BIGINT}
  </update>
  <sql id="MySQLDialectSuffix">
    <if test="start != null and rows != null">
      <![CDATA[  limit #{start},#{rows} ]]>
    </if>
  </sql>
</mapper>
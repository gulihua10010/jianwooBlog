<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jianwoo.blog.dao.base.mapper.BizPraiseMapper">
  <resultMap id="BaseResultMap" type="cn.jianwoo.blog.entity.BizPraise">
    <id column="OID" jdbcType="BIGINT" property="oid" />
    <result column="BIZ_OID" jdbcType="BIGINT" property="bizOid" />
    <result column="USER_IP" jdbcType="VARCHAR" property="userIp" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OID, BIZ_OID, USER_IP, `TYPE`, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="cn.jianwoo.blog.entity.example.BizPraiseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BIZ_PRAISE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MySQLDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BIZ_PRAISE
    where OID = #{oid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from BIZ_PRAISE
    where OID = #{oid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jianwoo.blog.entity.example.BizPraiseExample">
    delete from BIZ_PRAISE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="OID" keyProperty="oid" parameterType="cn.jianwoo.blog.entity.BizPraise" useGeneratedKeys="true">
    insert into BIZ_PRAISE (BIZ_OID, USER_IP, `TYPE`, 
      CREATE_TIME, UPDATE_TIME)
    values (#{bizOid,jdbcType=BIGINT}, #{userIp,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="OID" keyProperty="oid" parameterType="cn.jianwoo.blog.entity.BizPraise" useGeneratedKeys="true">
    insert into BIZ_PRAISE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bizOid != null">
        BIZ_OID,
      </if>
      <if test="userIp != null">
        USER_IP,
      </if>
      <if test="type != null">
        `TYPE`,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bizOid != null">
        #{bizOid,jdbcType=BIGINT},
      </if>
      <if test="userIp != null">
        #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jianwoo.blog.entity.example.BizPraiseExample" resultType="java.lang.Long">
    select count(*) from BIZ_PRAISE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update BIZ_PRAISE
    <set>
      <if test="record.oid != null">
        OID = #{record.oid,jdbcType=BIGINT},
      </if>
      <if test="record.bizOid != null">
        BIZ_OID = #{record.bizOid,jdbcType=BIGINT},
      </if>
      <if test="record.userIp != null">
        USER_IP = #{record.userIp,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `TYPE` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update BIZ_PRAISE
    set OID = #{record.oid,jdbcType=BIGINT},
      BIZ_OID = #{record.bizOid,jdbcType=BIGINT},
      USER_IP = #{record.userIp,jdbcType=VARCHAR},
      `TYPE` = #{record.type,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jianwoo.blog.entity.BizPraise">
    update BIZ_PRAISE
    <set>
      <if test="bizOid != null">
        BIZ_OID = #{bizOid,jdbcType=BIGINT},
      </if>
      <if test="userIp != null">
        USER_IP = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `TYPE` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OID = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jianwoo.blog.entity.BizPraise">
    update BIZ_PRAISE
    set BIZ_OID = #{bizOid,jdbcType=BIGINT},
      USER_IP = #{userIp,jdbcType=VARCHAR},
      `TYPE` = #{type,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where OID = #{oid,jdbcType=BIGINT}
  </update>
  <sql id="MySQLDialectSuffix">
    <if test="start != null and rows != null">
      <![CDATA[  limit #{start},#{rows} ]]>
    </if>
  </sql>
</mapper>
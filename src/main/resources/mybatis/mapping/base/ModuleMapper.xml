<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jianwoo.blog.dao.base.mapper.ModuleMapper">
    <resultMap id="BaseResultMap" type="cn.jianwoo.blog.entity.Module">
        <id column="OID" jdbcType="BIGINT" property="oid"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="IS_DISPLAY" jdbcType="INTEGER" property="isDisplay"/>
        <result column="INDEX" jdbcType="INTEGER" property="index"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        OID
        , NAME, IS_DISPLAY, `INDEX`, CREATE_DATE, UPDATE_DATE
    </sql>
    <select id="selectByExample" parameterType="cn.jianwoo.blog.entity.example.ModuleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from module
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MySQLDialectSuffix"/>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from module
        where OID = #{oid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from module
        where OID = #{oid,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.jianwoo.blog.entity.example.ModuleExample">
        delete from module
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.jianwoo.blog.entity.Module">
        insert into module (OID, NAME, IS_DISPLAY,
                            `INDEX`, CREATE_DATE, UPDATE_DATE)
        values (#{oid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{isDisplay,jdbcType=INTEGER},
                #{index,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="cn.jianwoo.blog.entity.Module">
        insert into module
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                OID,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="isDisplay != null">
                IS_DISPLAY,
            </if>
            <if test="index != null">
                `INDEX`,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                #{oid,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="isDisplay != null">
                #{isDisplay,jdbcType=INTEGER},
            </if>
            <if test="index != null">
                #{index,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.jianwoo.blog.entity.example.ModuleExample"
            resultType="java.lang.Long">
        select count(*) from module
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update module
        <set>
            <if test="record.oid != null">
                OID = #{record.oid,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.isDisplay != null">
                IS_DISPLAY = #{record.isDisplay,jdbcType=INTEGER},
            </if>
            <if test="record.index != null">
                `INDEX` = #{record.index,jdbcType=INTEGER},
            </if>
            <if test="record.createDate != null">
                CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update module
        set OID = #{record.oid,jdbcType=BIGINT},
        NAME = #{record.name,jdbcType=VARCHAR},
        IS_DISPLAY = #{record.isDisplay,jdbcType=INTEGER},
        `INDEX` = #{record.index,jdbcType=INTEGER},
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.jianwoo.blog.entity.Module">
        update module
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="isDisplay != null">
                IS_DISPLAY = #{isDisplay,jdbcType=INTEGER},
            </if>
            <if test="index != null">
                `INDEX` = #{index,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where OID = #{oid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.jianwoo.blog.entity.Module">
        update module
        set NAME        = #{name,jdbcType=VARCHAR},
            IS_DISPLAY  = #{isDisplay,jdbcType=INTEGER},
            `INDEX`     = #{index,jdbcType=INTEGER},
            CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}
        where OID = #{oid,jdbcType=BIGINT}
    </update>
    <sql id="MySQLDialectSuffix">
        <if test="start != null and rows != null">
            <![CDATA[  limit #{start},#{rows} ]]>
        </if>
    </sql>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jianwoo.blog.dao.base.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="cn.jianwoo.blog.entity.Admin">
        <id column="OID" jdbcType="BIGINT" property="oid"/>
        <result column="USERNAME" jdbcType="VARCHAR" property="username"/>
        <result column="PASSWORD" jdbcType="VARCHAR" property="password"/>
        <result column="NICK" jdbcType="VARCHAR" property="nick"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="EMAIL" jdbcType="VARCHAR" property="email"/>
        <result column="SEX" jdbcType="VARCHAR" property="sex"/>
        <result column="IP" jdbcType="VARCHAR" property="ip"/>
        <result column="LAST_LOGIN_IP" jdbcType="VARCHAR" property="lastLoginIp"/>
        <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        OID, USERNAME, `PASSWORD`, NICK, PHONE, EMAIL, SEX, IP, LAST_LOGIN_IP, LAST_LOGIN_TIME,
    CREATE_DATE, UPDATE_DATE
    </sql>
    <select id="selectByExample" parameterType="cn.jianwoo.blog.entity.example.AdminExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MySQLDialectSuffix"/>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin
        where OID = #{oid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from
            admin
        where
            OID = #{oid,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.jianwoo.blog.entity.example.AdminExample">
        delete from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.jianwoo.blog.entity.Admin">
        insert
        into
            admin
            (OID, USERNAME, `PASSWORD`,
             NICK, PHONE, EMAIL,
             SEX, IP, LAST_LOGIN_IP,
             LAST_LOGIN_TIME, CREATE_DATE, UPDATE_DATE)
        values
            (#{oid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
             #{nick,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
             #{sex,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{lastLoginIp,jdbcType=VARCHAR},
             #{lastLoginTime,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="cn.jianwoo.blog.entity.Admin">
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                OID,
            </if>
            <if test="username != null">
                USERNAME,
            </if>
            <if test="password != null">
                `PASSWORD`,
            </if>
            <if test="nick != null">
                NICK,
            </if>
            <if test="phone != null">
                PHONE,
            </if>
            <if test="email != null">
                EMAIL,
            </if>
            <if test="sex != null">
                SEX,
            </if>
            <if test="ip != null">
                IP,
            </if>
            <if test="lastLoginIp != null">
                LAST_LOGIN_IP,
            </if>
            <if test="lastLoginTime != null">
                LAST_LOGIN_TIME,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                #{oid,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nick != null">
                #{nick,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginIp != null">
                #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.jianwoo.blog.entity.example.AdminExample" resultType="java.lang.Long">
        select count(*) from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update admin
        <set>
            <if test="record.oid != null">
                OID = #{record.oid,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                USERNAME = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                `PASSWORD` = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.nick != null">
                NICK = #{record.nick,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                PHONE = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                EMAIL = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                SEX = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                IP = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.lastLoginIp != null">
                LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="record.lastLoginTime != null">
                LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createDate != null">
                CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update admin
        set OID = #{record.oid,jdbcType=BIGINT},
        USERNAME = #{record.username,jdbcType=VARCHAR},
        `PASSWORD` = #{record.password,jdbcType=VARCHAR},
        NICK = #{record.nick,jdbcType=VARCHAR},
        PHONE = #{record.phone,jdbcType=VARCHAR},
        EMAIL = #{record.email,jdbcType=VARCHAR},
        SEX = #{record.sex,jdbcType=VARCHAR},
        IP = #{record.ip,jdbcType=VARCHAR},
        LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
        LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.jianwoo.blog.entity.Admin">
        update admin
        <set>
            <if test="username != null">
                USERNAME = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `PASSWORD` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nick != null">
                NICK = #{nick,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                PHONE = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                EMAIL = #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                SEX = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                IP = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginIp != null">
                LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where OID = #{oid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.jianwoo.blog.entity.Admin">
        update admin
        set
            USERNAME        = #{username,jdbcType=VARCHAR},
            `PASSWORD`      = #{password,jdbcType=VARCHAR},
            NICK            = #{nick,jdbcType=VARCHAR},
            PHONE           = #{phone,jdbcType=VARCHAR},
            EMAIL           = #{email,jdbcType=VARCHAR},
            SEX             = #{sex,jdbcType=VARCHAR},
            IP              = #{ip,jdbcType=VARCHAR},
            LAST_LOGIN_IP   = #{lastLoginIp,jdbcType=VARCHAR},
            LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
            CREATE_DATE     = #{createDate,jdbcType=TIMESTAMP},
            UPDATE_DATE     = #{updateDate,jdbcType=TIMESTAMP}
        where
            OID = #{oid,jdbcType=BIGINT}
    </update>
    <sql id="MySQLDialectSuffix">
        <if test="start != null and rows != null">
            <![CDATA[  limit #{start},#{rows} ]]>
        </if>
    </sql>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jianwoo.blog.dao.base.mapper.AnnouncementMsgMapper">
  <resultMap id="BaseResultMap" type="cn.jianwoo.blog.entity.AnnouncementMsg">
    <id column="OID" jdbcType="BIGINT" property="oid" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="PUSH_TIME" jdbcType="TIMESTAMP" property="pushTime" />
    <result column="PUSH_BY" jdbcType="VARCHAR" property="pushBy" />
    <result column="EXPIATION_TIME" jdbcType="TIMESTAMP" property="expiationTime" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.jianwoo.blog.entity.AnnouncementMsg">
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OID, TITLE, PUSH_TIME, PUSH_BY, EXPIATION_TIME, `STATUS`, CREATE_TIME, UPDATE_TIME
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.jianwoo.blog.entity.example.AnnouncementMsgExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ANNOUNCEMENT_MSG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.jianwoo.blog.entity.example.AnnouncementMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ANNOUNCEMENT_MSG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MySQLDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ANNOUNCEMENT_MSG
    where OID = #{oid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ANNOUNCEMENT_MSG
    where OID = #{oid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jianwoo.blog.entity.example.AnnouncementMsgExample">
    delete from ANNOUNCEMENT_MSG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="OID" keyProperty="oid" parameterType="cn.jianwoo.blog.entity.AnnouncementMsg" useGeneratedKeys="true">
    insert into ANNOUNCEMENT_MSG (TITLE, PUSH_TIME, PUSH_BY, 
      EXPIATION_TIME, `STATUS`, CREATE_TIME, 
      UPDATE_TIME, CONTENT)
    values (#{title,jdbcType=VARCHAR}, #{pushTime,jdbcType=TIMESTAMP}, #{pushBy,jdbcType=VARCHAR}, 
      #{expiationTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="OID" keyProperty="oid" parameterType="cn.jianwoo.blog.entity.AnnouncementMsg" useGeneratedKeys="true">
    insert into ANNOUNCEMENT_MSG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        TITLE,
      </if>
      <if test="pushTime != null">
        PUSH_TIME,
      </if>
      <if test="pushBy != null">
        PUSH_BY,
      </if>
      <if test="expiationTime != null">
        EXPIATION_TIME,
      </if>
      <if test="status != null">
        `STATUS`,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pushTime != null">
        #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushBy != null">
        #{pushBy,jdbcType=VARCHAR},
      </if>
      <if test="expiationTime != null">
        #{expiationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jianwoo.blog.entity.example.AnnouncementMsgExample" resultType="java.lang.Long">
    select count(*) from ANNOUNCEMENT_MSG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ANNOUNCEMENT_MSG
    <set>
      <if test="record.oid != null">
        OID = #{record.oid,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.pushTime != null">
        PUSH_TIME = #{record.pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pushBy != null">
        PUSH_BY = #{record.pushBy,jdbcType=VARCHAR},
      </if>
      <if test="record.expiationTime != null">
        EXPIATION_TIME = #{record.expiationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `STATUS` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ANNOUNCEMENT_MSG
    set OID = #{record.oid,jdbcType=BIGINT},
      TITLE = #{record.title,jdbcType=VARCHAR},
      PUSH_TIME = #{record.pushTime,jdbcType=TIMESTAMP},
      PUSH_BY = #{record.pushBy,jdbcType=VARCHAR},
      EXPIATION_TIME = #{record.expiationTime,jdbcType=TIMESTAMP},
      `STATUS` = #{record.status,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ANNOUNCEMENT_MSG
    set OID = #{record.oid,jdbcType=BIGINT},
      TITLE = #{record.title,jdbcType=VARCHAR},
      PUSH_TIME = #{record.pushTime,jdbcType=TIMESTAMP},
      PUSH_BY = #{record.pushBy,jdbcType=VARCHAR},
      EXPIATION_TIME = #{record.expiationTime,jdbcType=TIMESTAMP},
      `STATUS` = #{record.status,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jianwoo.blog.entity.AnnouncementMsg">
    update ANNOUNCEMENT_MSG
    <set>
      <if test="title != null">
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pushTime != null">
        PUSH_TIME = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushBy != null">
        PUSH_BY = #{pushBy,jdbcType=VARCHAR},
      </if>
      <if test="expiationTime != null">
        EXPIATION_TIME = #{expiationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `STATUS` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where OID = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jianwoo.blog.entity.AnnouncementMsg">
    update ANNOUNCEMENT_MSG
    set TITLE = #{title,jdbcType=VARCHAR},
      PUSH_TIME = #{pushTime,jdbcType=TIMESTAMP},
      PUSH_BY = #{pushBy,jdbcType=VARCHAR},
      EXPIATION_TIME = #{expiationTime,jdbcType=TIMESTAMP},
      `STATUS` = #{status,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where OID = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jianwoo.blog.entity.AnnouncementMsg">
    update ANNOUNCEMENT_MSG
    set TITLE = #{title,jdbcType=VARCHAR},
      PUSH_TIME = #{pushTime,jdbcType=TIMESTAMP},
      PUSH_BY = #{pushBy,jdbcType=VARCHAR},
      EXPIATION_TIME = #{expiationTime,jdbcType=TIMESTAMP},
      `STATUS` = #{status,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where OID = #{oid,jdbcType=BIGINT}
  </update>
  <sql id="MySQLDialectSuffix">
    <if test="start != null and rows != null">
      <![CDATA[  limit #{start},#{rows} ]]>
    </if>
  </sql>
</mapper>
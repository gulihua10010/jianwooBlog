<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jianwoo.blog.dao.base.mapper.EmailTemplateMapper">
  <resultMap id="BaseResultMap" type="cn.jianwoo.blog.entity.EmailTemplate">
    <id column="EMAIL_TPL_CODE" jdbcType="VARCHAR" property="emailTplCode" />
    <result column="DESC" jdbcType="VARCHAR" property="desc" />
    <result column="SUBJECT" jdbcType="VARCHAR" property="subject" />
    <result column="TEST_JSON_DATA" jdbcType="VARCHAR" property="testJsonData" />
    <result column="STATUS_USED" jdbcType="VARCHAR" property="statusUsed" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.jianwoo.blog.entity.EmailTemplate">
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMAIL_TPL_CODE, `DESC`, SUBJECT, TEST_JSON_DATA, STATUS_USED, CREATE_TIME, UPDATE_TIME
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.jianwoo.blog.entity.example.EmailTemplateExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from EMAIL_TEMPLATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.jianwoo.blog.entity.example.EmailTemplateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from EMAIL_TEMPLATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MySQLDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from EMAIL_TEMPLATE
    where EMAIL_TPL_CODE = #{emailTplCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from EMAIL_TEMPLATE
    where EMAIL_TPL_CODE = #{emailTplCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jianwoo.blog.entity.example.EmailTemplateExample">
    delete from EMAIL_TEMPLATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jianwoo.blog.entity.EmailTemplate">
    insert into EMAIL_TEMPLATE (EMAIL_TPL_CODE, `DESC`, SUBJECT, 
      TEST_JSON_DATA, STATUS_USED, CREATE_TIME, 
      UPDATE_TIME, CONTENT)
    values (#{emailTplCode,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{testJsonData,jdbcType=VARCHAR}, #{statusUsed,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jianwoo.blog.entity.EmailTemplate">
    insert into EMAIL_TEMPLATE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="emailTplCode != null">
        EMAIL_TPL_CODE,
      </if>
      <if test="desc != null">
        `DESC`,
      </if>
      <if test="subject != null">
        SUBJECT,
      </if>
      <if test="testJsonData != null">
        TEST_JSON_DATA,
      </if>
      <if test="statusUsed != null">
        STATUS_USED,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="emailTplCode != null">
        #{emailTplCode,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="testJsonData != null">
        #{testJsonData,jdbcType=VARCHAR},
      </if>
      <if test="statusUsed != null">
        #{statusUsed,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jianwoo.blog.entity.example.EmailTemplateExample" resultType="java.lang.Long">
    select count(*) from EMAIL_TEMPLATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update EMAIL_TEMPLATE
    <set>
      <if test="record.emailTplCode != null">
        EMAIL_TPL_CODE = #{record.emailTplCode,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        `DESC` = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        SUBJECT = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.testJsonData != null">
        TEST_JSON_DATA = #{record.testJsonData,jdbcType=VARCHAR},
      </if>
      <if test="record.statusUsed != null">
        STATUS_USED = #{record.statusUsed,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update EMAIL_TEMPLATE
    set EMAIL_TPL_CODE = #{record.emailTplCode,jdbcType=VARCHAR},
      `DESC` = #{record.desc,jdbcType=VARCHAR},
      SUBJECT = #{record.subject,jdbcType=VARCHAR},
      TEST_JSON_DATA = #{record.testJsonData,jdbcType=VARCHAR},
      STATUS_USED = #{record.statusUsed,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update EMAIL_TEMPLATE
    set EMAIL_TPL_CODE = #{record.emailTplCode,jdbcType=VARCHAR},
      `DESC` = #{record.desc,jdbcType=VARCHAR},
      SUBJECT = #{record.subject,jdbcType=VARCHAR},
      TEST_JSON_DATA = #{record.testJsonData,jdbcType=VARCHAR},
      STATUS_USED = #{record.statusUsed,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jianwoo.blog.entity.EmailTemplate">
    update EMAIL_TEMPLATE
    <set>
      <if test="desc != null">
        `DESC` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        SUBJECT = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="testJsonData != null">
        TEST_JSON_DATA = #{testJsonData,jdbcType=VARCHAR},
      </if>
      <if test="statusUsed != null">
        STATUS_USED = #{statusUsed,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where EMAIL_TPL_CODE = #{emailTplCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jianwoo.blog.entity.EmailTemplate">
    update EMAIL_TEMPLATE
    set `DESC` = #{desc,jdbcType=VARCHAR},
      SUBJECT = #{subject,jdbcType=VARCHAR},
      TEST_JSON_DATA = #{testJsonData,jdbcType=VARCHAR},
      STATUS_USED = #{statusUsed,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where EMAIL_TPL_CODE = #{emailTplCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jianwoo.blog.entity.EmailTemplate">
    update EMAIL_TEMPLATE
    set `DESC` = #{desc,jdbcType=VARCHAR},
      SUBJECT = #{subject,jdbcType=VARCHAR},
      TEST_JSON_DATA = #{testJsonData,jdbcType=VARCHAR},
      STATUS_USED = #{statusUsed,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where EMAIL_TPL_CODE = #{emailTplCode,jdbcType=VARCHAR}
  </update>
  <sql id="MySQLDialectSuffix">
    <if test="start != null and rows != null">
      <![CDATA[  limit #{start},#{rows} ]]>
    </if>
  </sql>
</mapper>